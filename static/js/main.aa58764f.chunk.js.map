{"version":3,"sources":["CfgCounters.js","CounterFunc.js","Counters.js","index.js"],"names":["cfgCounters","name","revenue","Decimal","initialVisible","owned","initialCost","costGrowth","boostPct","boostMult","isVisible","disabled","CounterFunc","Object","classCallCheck","this","createClass","key","value","num","numformat","format","prestige","times","mult","counter","require","multiplier","Math","floor","prestigeMultiplier","val","div","plus","pow","counters","revenueFunc","sum","forEach","o","timeInterval","counterSum","toFixed","purchaseAmt","score","maxbuys","maxBuy","numBuy","_i","_arr","length","undefined","cost","max","log","max100","minus","max25","primes","primeFactorsTo","primeTime","primeidx","1","10","25","100","Max","parseInt","PrimeTime","primesFwd","console","time","i","j","store","push","reverse","timeEnd","CounterButton","_this","c","props","costObj","getCost","buttonClass","gte","rows","react_default","a","createElement","className","onClick","handlePurchase","Fragment","React","Component","CounterStats","counterRevenue","getRevenue","sumCounters","rps","showNumber","numberFormat","rp","getRevenuePct","priceClass","Counters","_React$Component2","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","_this2","counterList","map","Counters_CounterButton","numberformat","renderCounters","Game","call","Formatter","backend","sigfigs","timeIntervalDefault","state","prestigeNext","lifetimeEarnings","purchaseOpts","incomePerSec","incomePerTick","pause","pauseText","cleanState","objectSpread","updateGame","bind","assertThisInitialized","isTimerRunning","stopTimer","startTime","startTimer","restart","updateInterval","freqUp","freqDown","calcPrestigeEarned","tickIntervalId","setInterval","prestigeIntervalId","setState","clearInterval","newIntervalId","interval","testVal","newFreq","amt","indexOf","newPrestigeNext","sqrt","newPrestige","changed","lt","getRevenuePerTick","newLifetimeEarnings","counterCost","updatedCounter","newScore","_this3","prestigeClass","gt","src_Counters","toString","amtClass","updatePurchaseAmt","ReactDOM","render","src_Game","document","getElementById"],"mappings":"wQAEO,SAASA,IACZ,MACI,CAEI,CACIC,KAAM,iBACNC,QAAS,IAAIC,IAAQ,MACrBC,eAAgB,EAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,GACzBI,WAAY,KACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,qBACNC,QAAS,IAAIC,IAAQ,IACrBC,eAAgB,GAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,IACzBI,WAAY,KACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,WACNC,QAAS,IAAIC,IAAQ,IACrBC,eAAgB,IAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,KACzBI,WAAY,KACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,iBACNC,QAAS,IAAIC,IAAQ,KACrBC,eAAgB,KAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,MACzBI,WAAY,KACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,aACNC,QAAS,IAAIC,IAAQ,MACrBC,eAAgB,MAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,QACzBI,WAAY,KACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,cACNC,QAAS,IAAIC,IAAQ,MACrBC,eAAgB,OAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,SACzBI,WAAY,KACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,cACNC,QAAS,IAAIC,IAAQ,OACrBC,eAAgB,QAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,UACzBI,WAAY,IACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,eACNC,QAAS,IAAIC,IAAQ,OACrBC,eAAgB,SAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,WACzBI,WAAY,IACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,OACNC,QAAS,IAAIC,IAAQ,QACrBC,eAAgB,WAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,YACzBI,WAAY,IACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,GAEd,CACIV,KAAM,cACNC,QAAS,IAAIC,IAAQ,QACrBC,eAAgB,YAChBC,MAAO,EACPC,YAAa,IAAIH,IAAQ,aACzBI,WAAY,IACZC,SAAU,EACVC,UAAW,EACXC,WAAW,EACXC,UAAU,IC3HnB,IAAMC,EAAb,oBAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAA,OAAAC,OAAAG,EAAA,EAAAH,CAAAD,EAAA,OAAAK,IAAA,aAAAC,MAAA,SAEsBC,EAAKC,GACnB,OAAOA,EAAUC,OAAOF,KAHhC,CAAAF,IAAA,qBAAAC,MAAA,SAM8BI,GACtB,OAAOA,EAASH,IAAII,MAAMD,EAASE,QAP3C,CAAAP,IAAA,aAAAC,MAAA,SAUsBO,EAASH,GACvB,IAAMnB,EAAUuB,EAAQ,GAClBC,EAAaC,KAAKC,MAAMJ,EAAQpB,MAAQ,IACxCyB,EAAqBR,EAASH,IAAII,MAAMD,EAASS,KAAKC,IAAI,KAAKC,KAAK,GAE1E,OAAO,IAAI9B,EACPsB,EAAQvB,QACHqB,MAAMK,KAAKM,IAAI,EAAGP,IAClBJ,MAAME,EAAQpB,OACdkB,MAAMO,MAnBvB,CAAAb,IAAA,cAAAC,MAAA,SAuBuBiB,EAAUC,EAAad,GACtC,IACIe,EAAM,IADMX,EAAQ,GACd,CAAY,GAItB,OAHAS,EAASG,QAAQ,SAACC,GACdF,EAAMA,EAAIJ,KAAKG,EAAYG,EAAGjB,MAE3Be,IA7Bf,CAAApB,IAAA,oBAAAC,MAAA,SAgC6BhB,EAASsC,GAC9B,OAAOtC,EAAQqB,MAAMiB,EAAe,OAjC5C,CAAAvB,IAAA,gBAAAC,MAAA,SAoCyBhB,EAASuC,GAC1B,OAAOvC,EAAQ8B,IAAIS,GAAYlB,MAAM,KAAKmB,QAAQ,KArC1D,CAAAzB,IAAA,UAAAC,MAAA,SAyCmBO,EAASkB,EAAaC,GAEjC,IAAMC,EAAU9B,KAAK+B,OAAOrB,EAASmB,GAEjCG,EAAS,EAEb,OAAQJ,GAEJ,IAAK,UAED,QAAAK,EAAA,EAAAC,EAAkB,CAAC,SAAU,SAA7BD,EAAAC,EAAAC,OAAAF,IAAuC,CAAlC,IAAM/B,EAAGgC,EAAAD,GAENH,EAAQ5B,GAAO,GAAK8B,EAASF,EAAQ5B,KAAQ8B,EAASF,EAAQ5B,IAEvD,IAAX8B,IACAA,EAAS,IAGb,MACJ,QAEQA,OADyBI,IAAzBN,EAAQF,GACCE,EAAQF,GAERA,EAKrB,MAAQ,CACJxB,IAAK4B,EACLK,KAAM3B,EAAQnB,YAAYiB,MACtBK,KAAKM,IAAIT,EAAQlB,WAAYkB,EAAQpB,QAClCuB,KAAKM,IAAIT,EAAQlB,WAAYwC,GAAU,IAAIf,IAAIP,EAAQlB,WAAa,MAzEvF,CAAAU,IAAA,SAAAC,MAAA,SA6EkBO,EAASmB,GACnB,IACMS,EAAM,IADI3B,EAAQ,GACZ,CACRkB,EACKrB,MAAME,EAAQlB,WAAa,GAC3ByB,IACGP,EAAQnB,YAAYiB,MAChBK,KAAKM,IAAIT,EAAQlB,WAAYkB,EAAQpB,UAEnD4B,KAAK,GAAGqB,IAAI7B,EAAQlB,YAAYsB,QAC5B0B,EAASF,EAAIrB,IAAI,KAAKH,QAAQN,MAAM,KAAKiC,MAAM/B,EAAQpB,MAAQ,KAAKqC,QAAQ,GAC5Ee,EAAQJ,EAAIrB,IAAI,IAAIH,QAAQN,MAAM,IAAIiC,MAAM/B,EAAQpB,MAAQ,IAAIqC,QAAQ,GACxEgB,EAAS3C,KAAK4C,iBAChBC,EAAY,EAGhB,IAAK,IAAMC,KAAYH,EACnB,GAAKA,EAAOG,GAAYpC,EAAQpB,MAASgD,EAAK,CAC1CO,EAAYF,EAAOG,GAAYpC,EAAQpB,MACvC,MAKR,MAAQ,CACJyD,EAAG,EACHC,GAAI,GACJC,GAAI,GACJC,IAAK,IACLC,IAAKC,SAASd,EAAIX,QAAQ,GAAI,IAC9B0B,UAAWR,EAEXH,MAAOU,SAASV,EAAO,IACvBF,OAAQY,SAASZ,EAAQ,OA9GrC,CAAAtC,IAAA,iBAAAC,MAAA,WAmHQ,GAAIH,KAAK2C,OACL,OAAO3C,KAAK2C,OAEhB,IACIW,EAAY,GAChBC,QAAQhB,IAAI,mBACZgB,QAAQC,KAAK,kBACb,IAAgBC,EAAGC,EAAfC,EAAQ,GACZ,IAAKF,EAAI,EAAGA,GALF,OAKcA,EACpB,IAAKE,EAAMF,GAEP,IADAH,EAAUM,KAAKH,GACVC,EAAID,GAAK,EAAGC,GARf,KAQyBA,GAAKD,EAC5BE,EAAMD,IAAK,EAOvB,OAHA1D,KAAK2C,OAASW,EAAUO,UACxBN,QAAQO,QAAQ,kBAChBP,QAAQhB,IAAI,kBAAoBvC,KAAK2C,OAAOR,QACrCnC,KAAK2C,WAtIpB9C,EAAA,GCKMkE,mLACO,IAAAC,EAAAhE,KACCiE,EAAIjE,KAAKkE,MAAMxD,QACfyD,EAAUtE,EAAYuE,QAAQH,EAAGjE,KAAKkE,MAAMtC,YAAa5B,KAAKkE,MAAMrC,OAIpEwC,EAAc,iBACbF,EAAQ/D,IAAM,GAAKJ,KAAKkE,MAAMrC,MAAMyC,IAAIH,EAAQ9B,MAAQ,YAAc,gBACvEkC,EAAO,GAYb,OAXAA,EAAKX,KAAKY,EAAAC,EAAAC,cAAA,UACNC,UAAWN,EACXnE,IAAK+D,EAAE/E,KAAO,SACdU,SAAUqE,EAAErE,SACZgF,QAAS,kBAAMZ,EAAKE,MAAMW,eAAeZ,KAExCA,EAAE/E,KANG,MAMMiF,EAAQ/D,MAGxBmE,EAAKX,KAAKY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBzE,IAAK+D,EAAE/E,KAAO,UAC/DqF,EAAKX,KAAKY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAczE,IAAK+D,EAAE/E,KAAO,SAAU+E,EAAE3E,QAE7DkF,EAAAC,EAAAC,cAACF,EAAAC,EAAMK,SAAP,KACKP,UAvBWQ,IAAMC,WA6BlC,SAASC,EAAaf,GAClB,IAAMD,EAAIC,EAAMxD,QACVwE,EAAiBrF,EAAYsF,WAAWjB,EAAMxD,QAASwD,EAAM3D,UAC7DmB,EAAa7B,EAAYuF,YAAYlB,EAAM9C,SAAUvB,EAAYsF,WAAYjB,EAAM3D,UACnF4D,EAAUtE,EAAYuE,QAAQH,EAAGC,EAAMtC,YAAasC,EAAMrC,OAE1DwD,EAAMxF,EAAYyF,WAAWJ,EAAgBhB,EAAMqB,cACnDC,EAAK3F,EAAYyF,WAAWzF,EAAY4F,cAAcP,EAAgBxD,GAAawC,EAAMqB,cACzFlD,EAAOxC,EAAYyF,WAAWnB,EAAQ9B,KAAM6B,EAAMqB,cAElDG,EAAa,wBACRxB,EAAMrC,MAAMyC,IAAIzE,EAAYuE,QAAQH,EAAGC,EAAMtC,YAAasC,EAAMrC,OAAOQ,MAAQ,YAAc,gBAElGkC,EAAO,GAKb,OAJAA,EAAKX,KAAKY,EAAAC,EAAAC,cAAA,OAAKC,UAAWe,EAAYxF,IAAK+D,EAAE/E,KAAO,eAA1C,IAA2DmD,IACrEkC,EAAKX,KAAKY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBzE,IAAK+D,EAAE/E,KAAO,cAAemG,EAAjE,QACVd,EAAKX,KAAKY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBzE,IAAK+D,EAAE/E,KAAO,iBAAkBsG,EAAvE,MAGNhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACVJ,GAQN,IA8CQoB,EA9Cf,SAAAC,GAAA,SAAAD,IAAA,OAAA7F,OAAAC,EAAA,EAAAD,CAAAE,KAAA2F,GAAA7F,OAAA+F,EAAA,EAAA/F,CAAAE,KAAAF,OAAAgG,EAAA,EAAAhG,CAAA6F,GAAAI,MAAA/F,KAAAgG,YAAA,OAAAlG,OAAAmG,EAAA,EAAAnG,CAAA6F,EAAAC,GAAA9F,OAAAG,EAAA,EAAAH,CAAA6F,EAAA,EAAAzF,IAAA,iBAAAC,MAAA,WAEqB,IAAA+F,EAAAlG,KAGPmG,EAAcnG,KAAKkE,MAAM9C,SAASgF,IAAI,SAAC1F,GACzC,OAAIA,EAAQf,UAEJ6E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBzE,IAAKQ,EAAQxB,MAC1CsF,EAAAC,EAAAC,cAAC2B,EAAD,CACI3F,QAASA,EACTmB,MAAOqE,EAAKhC,MAAMrC,MAClBD,YAAasE,EAAKhC,MAAMtC,YACxBiD,eAAgBqB,EAAKhC,MAAMW,iBAE/BL,EAAAC,EAAAC,cAACO,EAAD,CACIvE,QAASA,EACTmB,MAAOqE,EAAKhC,MAAMrC,MAClBT,SAAU8E,EAAKhC,MAAM9C,SACrBb,SAAU2F,EAAKhC,MAAM3D,SACrBkB,aAAcyE,EAAKhC,MAAMzC,aACzB8D,aAAcW,EAAKhC,MAAMoC,aACzB1E,YAAasE,EAAKhC,MAAMtC,eAMhC4C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBzE,IAAKQ,EAAQxB,SAK1D,OACIsF,EAAAC,EAAAC,cAAA,eAAOyB,KAlCnB,CAAAjG,IAAA,SAAAC,MAAA,WAwCQ,OACIH,KAAKuG,qBAzCjBZ,EAAA,CAA8BZ,IAAMC,WCnD9BwB,cAEF,SAAAA,EAAYtC,GAAO,IAAAF,EAAAlE,OAAAC,EAAA,EAAAD,CAAAE,KAAAwG,GACfxC,EAAAlE,OAAA+F,EAAA,EAAA/F,CAAAE,KAAAF,OAAAgG,EAAA,EAAAhG,CAAA0G,GAAAC,KAAAzG,KAAMkE,IAEN,IAAM9E,EAAUuB,EAAQ,GAClB2F,EAAe3F,EAAQ,IAJd,OAKfqD,EAAKsC,aAAe,IAAIA,EAAaI,UAAU,CAAEC,QAAS,aAAcC,QAAS,EAAGtG,OAAQ,cAAelB,QAASA,IAGpH4E,EAAK6C,oBAAsB,IAE3B7C,EAAK8C,MAAQ,CACT1F,SAAUnC,IACV4C,MAAO,IAAIzC,EAAQ,GACnBmB,SAAU,CAAEH,IAAK,IAAIhB,EAAQ,KAAO4B,IAAK,GACzC+F,aAAc,IAAI3H,EAAQ,GAC1B4H,iBAAkB,IAAI5H,EAAQ,GAC9B6H,aAAc,CAAC,IAAK,KAAM,KAAM,MAAO,MAAO,UAAW,aACzDrF,YAAa,IACbsF,aAAc,IAAI9H,EAAQ,GAC1B+H,cAAe,IAAI/H,EAAQ,GAC3BgI,OAAO,EACPC,UAAW,QACX5F,aAAcuC,EAAK6C,qBAGvB7C,EAAKvC,aAAeuC,EAAK6C,oBAEzB7C,EAAKsD,WAALxH,OAAAyH,EAAA,EAAAzH,CAAA,GAAuBkE,EAAK8C,cACrB9C,EAAKsD,WAAWD,iBAChBrD,EAAKsD,WAAW1F,YAGvBoC,EAAKwD,WAAaxD,EAAKwD,WAAWC,KAAhB3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IAClBA,EAAKa,eAAiBb,EAAKa,eAAe4C,KAApB3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IACtBA,EAAK2D,eAAiB3D,EAAK2D,eAAeF,KAApB3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IACtBA,EAAK4D,UAAY5D,EAAK4D,UAAUH,KAAf3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IACjBA,EAAK6D,UAAY7D,EAAK8D,WAAWL,KAAhB3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IACjBA,EAAKoD,MAAQpD,EAAKoD,MAAMK,KAAX3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IACbA,EAAK+D,QAAU/D,EAAK+D,QAAQN,KAAb3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IACfA,EAAKgE,eAAiBhE,EAAKgE,eAAeP,KAApB3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IACtBA,EAAKiE,OAASjE,EAAKiE,OAAOR,KAAZ3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IACdA,EAAKkE,SAAWlE,EAAKkE,SAAST,KAAd3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IAChBA,EAAKmE,mBAAqBnE,EAAKmE,mBAAmBV,KAAxB3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IAC1BA,EAAKzD,SAAWyD,EAAKzD,SAASkH,KAAd3H,OAAA4H,EAAA,EAAA5H,CAAAkE,IAGhBA,EAAKoE,eAAiBC,YAAYrE,EAAKwD,WAAYxD,EAAKvC,cACxDuC,EAAKsE,mBAAqBD,YAAYrE,EAAKmE,mBAAoB,KA/ChDnE,yEAmDfhE,KAAKuI,SAASvI,KAAKsH,YACnBtH,KAAKyB,aAAezB,KAAK6G,oBACzB7G,KAAKuI,SAAS,CACVnH,SAAUnC,MAEde,KAAK4H,YACL5H,KAAK8H,sDAIL,QAAO9H,KAAKoI,mDAIRpI,KAAK2H,mBACLpE,QAAQhB,IAAI,kBACZiG,cAAcxI,KAAKoI,gBACnBpI,KAAKoI,oBAAiBhG,wCAK1B,IAAKpC,KAAK2H,iBAAkB,CACxBpE,QAAQhB,IAAI,kBACZ,IAAMkG,EAAgBJ,YAAYrI,KAAKwH,WAAYxH,KAAKyB,cACxDzB,KAAKoI,eAAiBK,mCAKtBzI,KAAK2H,kBACLpE,QAAQhB,IAAI,cACZvC,KAAK4H,YACL5H,KAAKuI,SAAS,CACVlB,UAAW,aAGf9D,QAAQhB,IAAI,wBACZvC,KAAK8H,aACL9H,KAAKuI,SAAS,CACVlB,UAAW,kDAKRqB,GACX1I,KAAKyB,aAAeiH,EACpB1I,KAAKuI,SAAS,CACV9G,aAAciH,IAGd1I,KAAK2H,mBACL3H,KAAK4H,YACL5H,KAAK8H,+CAKT,IAAMa,EAAU3I,KAAKyB,aAAe,GAC9BmH,EAAUD,GAAW,IAAOA,EAAU,IAC5C3I,KAAKgI,eAAeY,sCAIpB,IAAMD,EAAU3I,KAAKyB,aAAe,GAC9BmH,EAAUD,GAAW,GAAKA,EAAU,GAC1C3I,KAAKgI,eAAeY,6CAGNC,IACgC,IAA1C7I,KAAK8G,MAAMG,aAAa6B,QAAQD,IAAe7I,KAAK8G,MAAMlF,cAAgBiH,GAC1E7I,KAAKuI,SAAS,CACV3G,YAAaiH,iDAMrB,IACME,EADUpI,EAAQ,GACQqI,KAAKhJ,KAAK8G,MAAME,iBAAiB/F,IAAIJ,KAAKM,IAAI,GAAI,KAAKX,MAAM,KAAKM,QAC9FiI,IAAoB/I,KAAK8G,MAAMC,cAC/B/G,KAAKuI,SAAS,CACVxB,aAAcgC,uCAOtB/I,KAAKmI,qBACL,IAAMc,EAAcjJ,KAAK8G,MAAMvG,SAASH,IAAIc,KAAKlB,KAAK8G,MAAMC,cAC5D/G,KAAK+H,UACL/H,KAAKuI,SAAS,CACVhI,SAAU,CAAEH,IAAK6I,EAAajI,IAAKhB,KAAK8G,MAAMvG,SAASS,4CAIlD,IAAAkF,EAAAlG,KACLkJ,GAAU,EACV/C,EAAcnG,KAAK8G,MAAM1F,SAASgF,IAAI,SAAC1F,GAEvC,IAAMyD,EAAUtE,EAAYuE,QAAQ1D,EAASwF,EAAKY,MAAMlF,YAAasE,EAAKY,MAAMjF,OAchF,OAZ0B,IAAtBnB,EAAQf,WAAuBuG,EAAKY,MAAMjF,MAAMyC,IAAI5D,EAAQrB,kBAC5DqB,EAAQf,WAAY,EACpBuJ,GAAU,IAEW,IAArBxI,EAAQd,UAAuC,IAAhBuE,EAAQ/D,MAAa8F,EAAKY,MAAMjF,MAAMsH,GAAGhF,EAAQ9B,QAChF3B,EAAQd,UAAW,EACnBsJ,GAAU,IAEW,IAArBxI,EAAQd,UAAqBuE,EAAQ/D,IAAM,GAAK8F,EAAKY,MAAMjF,MAAMyC,IAAIH,EAAQ9B,QAC7E3B,EAAQd,UAAW,EACnBsJ,GAAU,GAEPxI,IAEPwI,GACAlJ,KAAKuI,SAAS,CACVnH,SAAU+E,IAIlB,IAAMe,EAAerH,EAAYuF,YAAYpF,KAAK8G,MAAM1F,SAAUvB,EAAYsF,WAAYnF,KAAK8G,MAAMvG,UAC/F4G,EAAgBtH,EAAYuJ,kBAAkBlC,EAAclH,KAAKyB,cACjE4H,EAAsBrJ,KAAK8G,MAAME,iBAAiB9F,KAAKiG,GAC7DnH,KAAKuI,SAAS,CACVrB,aAAcA,EACdC,cAAeA,EACftF,MAAO7B,KAAK8G,MAAMjF,MAAMX,KAAKiG,GAC7BH,iBAAkBqC,2CAKX3I,GACX,IAAM4I,EAAczJ,EAAYuE,QAAQ1D,EAASV,KAAK8G,MAAMlF,YAAa5B,KAAK8G,MAAMjF,OAEpF,GADA0B,QAAQhB,IAAI,uBAAyB+G,EAAYjH,KAAKV,QAAQ,IAC1D3B,KAAK8G,MAAMjF,MAAMyC,IAAIgF,EAAYjH,MAAO,CAExCkB,QAAQhB,IAAI,cAAgB+G,EAAYlJ,IAAM,MAAQM,EAAQxB,KAAO,QAAUoK,EAAYjH,KAAKV,QAAQ,IACxG,IAAI4H,EAAczJ,OAAAyH,EAAA,EAAAzH,CAAA,GAAQY,GAE1B6I,EAAejK,MAASoB,EAAQpB,MAAQgK,EAAYlJ,IAEpD,IAAMoJ,EAAWxJ,KAAK8G,MAAMjF,MAAMY,MAAM6G,EAAYjH,MAChD8D,EAAcnG,KAAK8G,MAAM1F,SAASgF,IAAI,SAACnC,GACvC,OAAQA,EAAE/E,OAASwB,EAAQxB,KAAQqK,EAAiBtF,IAExDjE,KAAKuI,SAAS,CACVnH,SAAU+E,EACVtE,MAAO2H,SAIXjG,QAAQhB,IAAI,gCAAkC7B,EAAQxB,KAAO,QAAUoK,EAAYjH,KAAKV,QAAQ,GAAK,MAAQ3B,KAAK8G,MAAMjF,MAAMF,QAAQ,qCAIrI,IAAA8H,EAAAzJ,KAECe,EAAqBf,KAAK8G,MAAMvG,SAASH,IAAII,MAAMR,KAAK8G,MAAMvG,SAASS,KACvE0I,EAAgB1J,KAAK8G,MAAMC,aAAa4C,GAAG,GAAK,0BAA4B,6BAElF,OACInF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACkF,EAAD,CACIxI,SAAUpB,KAAK8G,MAAM1F,SACrBb,SAAUP,KAAK8G,MAAMvG,SACrBsB,MAAO7B,KAAK8G,MAAMjF,MAClBJ,aAAczB,KAAKyB,aACnB6E,aAActG,KAAKsG,aACnB1E,YAAa5B,KAAK8G,MAAMlF,YACxBiD,eAAgB7E,KAAK6E,kBAG7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,cAAM7E,EAAYyF,WAAWtF,KAAK8G,MAAMjF,MAAO7B,KAAKsG,eACpD9B,EAAAC,EAAAC,cAAA,UAAK7E,EAAYyF,WAAWtF,KAAK8G,MAAMI,aAAclH,KAAKsG,cAA1D,OACA9B,EAAAC,EAAAC,cAAA,UAAK7E,EAAYyF,WAAWtF,KAAK8G,MAAMK,cAAenH,KAAKsG,cAA3D,UACA9B,EAAAC,EAAAC,cAAA,oBAAY1E,KAAK8G,MAAMrF,aAAvB,OACA+C,EAAAC,EAAAC,cAAA,UAAK7E,EAAYyF,WAAWtF,KAAK8G,MAAME,iBAAkBhH,KAAKsG,cAA9D,sBACA9B,EAAAC,EAAAC,cAAA,UACK7E,EAAYyF,WAAWtF,KAAK8G,MAAMvG,SAASH,IAAKJ,KAAKsG,cAD1D,yBAGKzG,EAAYyF,WAAWvE,EAAoBf,KAAKsG,cAHrD,KAKA9B,EAAAC,EAAAC,cAAA,UAAK7E,EAAYyF,WAAWtF,KAAK8G,MAAMC,aAAc/G,KAAKsG,cAA1D,mBAEJ9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeC,QAAS5E,KAAKoH,OAAQpH,KAAK8G,MAAMO,WAClE7C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeC,QAAS5E,KAAK+H,SAA/C,WACAvD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,QAAS5E,KAAKiI,QAAzC,UACAzD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWC,QAAS5E,KAAKkI,UAA3C,UACA1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,iBAA6C3E,KAAK2H,iBAAiBkC,YACnErF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACV3E,KAAK8G,MAAMG,aAAab,IAAI,SAACyC,GAC1B,IAAIiB,EAAW,kBAIf,OAHIjB,IAAQY,EAAK3C,MAAMlF,cACnBkI,EAAW,gCAGXtF,EAAAC,EAAAC,cAAA,UAAQxE,IAAK2I,EAAKlE,UAAWmF,EAAUlF,QAAS,WAAQ6E,EAAKM,kBAAkBlB,KAASA,MAIpGrE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAW+E,EAAe9J,UAAUI,KAAK8G,MAAMC,aAAa4C,GAAG,GAAmB/E,QAAS5E,KAAKO,UAAxG,sBAvQLwE,IAAMC,WA2RzBgF,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.aa58764f.chunk.js","sourcesContent":["import Decimal from 'decimal.js';\n\nexport function cfgCounters() {\n    return (\n        [\n\n            {\n                name: \"Lemonade Stand\",\n                revenue: new Decimal(1.67),\n                initialVisible: 1,\n                owned: 1,\n                initialCost: new Decimal(4),\n                costGrowth: 1.07,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: true,\n                disabled: true,\n            },\n            {\n                name: \"Newspaper Delivery\",\n                revenue: new Decimal(20.00),\n                initialVisible: 60,\n                owned: 0,\n                initialCost: new Decimal(60),\n                costGrowth: 1.15,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n            {\n                name: \"Car Wash\",\n                revenue: new Decimal(90.00),\n                initialVisible: 540,\n                owned: 0,\n                initialCost: new Decimal(720),\n                costGrowth: 1.14,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n            {\n                name: \"Pizza Delivery\",\n                revenue: new Decimal(360),\n                initialVisible: 4320,\n                owned: 0,\n                initialCost: new Decimal(8640),\n                costGrowth: 1.13,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n            {\n                name: \"Donut Shop\",\n                revenue: new Decimal(2160),\n                initialVisible: 51840,\n                owned: 0,\n                initialCost: new Decimal(103680),\n                costGrowth: 1.12,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n            {\n                name: \"Shrimp Boat\",\n                revenue: new Decimal(6480),\n                initialVisible: 622080,\n                owned: 0,\n                initialCost: new Decimal(1244160),\n                costGrowth: 1.11,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n            {\n                name: \"Hockey Team\",\n                revenue: new Decimal(19440),\n                initialVisible: 7464960,\n                owned: 0,\n                initialCost: new Decimal(14929920),\n                costGrowth: 1.10,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n            {\n                name: \"Movie Studio\",\n                revenue: new Decimal(58320),\n                initialVisible: 89579520,\n                owned: 0,\n                initialCost: new Decimal(179159040),\n                costGrowth: 1.9,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n            {\n                name: \"Bank\",\n                revenue: new Decimal(174960),\n                initialVisible: 1074954240,\n                owned: 0,\n                initialCost: new Decimal(2149908480),\n                costGrowth: 1.8,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n            {\n                name: \"Oil Company\",\n                revenue: new Decimal(804816),\n                initialVisible: 29668737024,\n                owned: 0,\n                initialCost: new Decimal(25798901760),\n                costGrowth: 1.7,\n                boostPct: 0,\n                boostMult: 0,\n                isVisible: false,\n                disabled: true,\n            },\n\n        ]\n    );\n}\n\n// export default cfgCounters;","\nexport class CounterFunc {\n\n    static showNumber(num, numformat) {\n        return numformat.format(num);\n    }\n\n    static prestigeMultiplier(prestige) {\n        return prestige.num.times(prestige.mult);\n    }\n\n    static getRevenue(counter, prestige) {\n        const Decimal = require('decimal.js');\n        const multiplier = Math.floor(counter.owned / 25);\n        const prestigeMultiplier = prestige.num.times(prestige.val).div(100).plus(1);\n        // console.log(\"multiplier:\" + multiplier.toFixed() + \" pmult:\" + prestigeMultiplier.toFixed());\n        return new Decimal(\n            counter.revenue\n                .times(Math.pow(2, multiplier))\n                .times(counter.owned)\n                .times(prestigeMultiplier)\n        );\n    }\n\n    static sumCounters(counters, revenueFunc, prestige) {\n        const Decimal = require('decimal.js');\n        let sum = new Decimal(0.00);\n        counters.forEach((o) => {\n            sum = sum.plus(revenueFunc(o, prestige));\n        })\n        return sum;\n    }\n\n    static getRevenuePerTick(revenue, timeInterval) {\n        return revenue.times(timeInterval / 1000);\n    }\n\n    static getRevenuePct(revenue, counterSum) {\n        return revenue.div(counterSum).times(100).toFixed(2);\n    }\n\n\n    static getCost(counter, purchaseAmt, score) {\n        // const Decimal = require('decimal.js');\n        const maxbuys = this.maxBuy(counter, score);\n        // console.log(maxbuys);\n        let numBuy = 0;\n\n        switch (purchaseAmt) {\n\n            case \"Max OCD\":\n                // console.log(maxbuys);\n                for (const key of [\"max100\", \"max25\"]) {\n                    // console.log(\"maxbuys[\" + key + \"] = \" + maxbuys[key]);\n                    if (maxbuys[key] > 0 && numBuy < maxbuys[key]) { numBuy = maxbuys[key]; }\n                };\n                if (numBuy === 0) {\n                    numBuy = 25;\n                }\n                // console.log(\"numBuy = \" + numBuy);\n                break;\n            default:\n                if (maxbuys[purchaseAmt] !== undefined) {\n                    numBuy = maxbuys[purchaseAmt];\n                } else {\n                    numBuy = purchaseAmt;\n                }\n                break;\n        }\n\n        return ({\n            num: numBuy,\n            cost: counter.initialCost.times(\n                Math.pow(counter.costGrowth, counter.owned)\n                * (Math.pow(counter.costGrowth, numBuy) - 1)).div(counter.costGrowth - 1),\n        });\n    }\n\n    static maxBuy(counter, score) {\n        const Decimal = require('decimal.js');\n        const max = new Decimal(\n            score\n                .times(counter.costGrowth - 1)\n                .div(\n                    counter.initialCost.times(\n                        Math.pow(counter.costGrowth, counter.owned))\n                )\n        ).plus(1).log(counter.costGrowth).floor();\n        const max100 = max.div(100).floor().times(100).minus(counter.owned % 100).toFixed(0);\n        const max25 = max.div(25).floor().times(25).minus(counter.owned % 25).toFixed(0);\n        const primes = this.primeFactorsTo();\n        let primeTime = 0;\n\n        // console.time('primeidx');\n        for (const primeidx in primes) {\n            if ((primes[primeidx] - counter.owned) < max) {\n                primeTime = primes[primeidx] - counter.owned;\n                break;\n            }\n        }\n        // console.timeEnd('primeidx');\n\n        return ({\n            1: 1,\n            10: 10,\n            25: 25,\n            100: 100,\n            Max: parseInt(max.toFixed(0), 10),\n            PrimeTime: primeTime,\n            // max10: parseInt(max10, 10),\n            max25: parseInt(max25, 10),\n            max100: parseInt(max100, 10),\n        });\n    }\n\n    static primeFactorsTo() {\n        if (this.primes) {\n            return this.primes;\n        }\n        var max = 25000;\n        var primesFwd = [];\n        console.log(\"creating primes\");\n        console.time('prime creation');\n        var store = [], i, j;\n        for (i = 2; i <= max; ++i) {\n            if (!store[i]) {\n                primesFwd.push(i);\n                for (j = i << 1; j <= max; j += i) {\n                    store[j] = true;\n                }\n            }\n        }\n        this.primes = primesFwd.reverse();\n        console.timeEnd('prime creation');\n        console.log(\"primes length: \" + this.primes.length);\n        return this.primes;\n    }\n}\n\n\n\n","import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Decimal from 'decimal.js';\n// import { CfgCounters } from './CfgCounters.js';\nimport { CounterFunc } from './CounterFunc';\n\nclass CounterButton extends React.Component {\n    render() {\n        const c = this.props.counter;\n        const costObj = CounterFunc.getCost(c, this.props.purchaseAmt, this.props.score);\n\n        // console.log(\"tryBuy: \" +tryBuy);\n        // console.log(CounterFunc.getCost(c, tryBuy, this.props.score));\n        const buttonClass = \"counter-name \"\n            + (costObj.num > 0 && this.props.score.gte(costObj.cost) ? \"canAfford\" : \"cannotAfford\");\n        const rows = [];\n        rows.push(<button\n            className={buttonClass}\n            key={c.name + \"button\"}\n            disabled={c.disabled}\n            onClick={() => this.props.handlePurchase(c)}\n        >\n            {c.name} x {costObj.num}\n        </button>\n        );\n        rows.push(<div className=\"newCounterAnimOverlay\" key={c.name + \"anim\"} />);\n        rows.push(<div className=\"counter-val\" key={c.name + \"owned\"}>{c.owned}</div>);\n        return (\n            <React.Fragment>\n                {rows}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction CounterStats(props) {\n    const c = props.counter;\n    const counterRevenue = CounterFunc.getRevenue(props.counter, props.prestige);\n    const counterSum = CounterFunc.sumCounters(props.counters, CounterFunc.getRevenue, props.prestige);\n    const costObj = CounterFunc.getCost(c, props.purchaseAmt, props.score);\n\n    const rps = CounterFunc.showNumber(counterRevenue, props.numberFormat);\n    const rp = CounterFunc.showNumber(CounterFunc.getRevenuePct(counterRevenue, counterSum), props.numberFormat);\n    const cost = CounterFunc.showNumber(costObj.cost, props.numberFormat);\n\n    const priceClass = \"counter-stats-price \"\n            + (props.score.gte(CounterFunc.getCost(c, props.purchaseAmt, props.score).cost) ? \"canAfford\" : \"cannotAfford\");\n\n    const rows = [];\n    rows.push(<div className={priceClass} key={c.name + \"stats-price\"}>${cost}</div>);\n    rows.push(<div className=\"counter-stats-rate\" key={c.name + \"stats-rate\"}>{rps} /s</div>);\n    rows.push(<div className=\"counter-stats-percent\" key={c.name + \"stats-percent\"}>{rp}%</div>);\n\n    return (\n        <div className=\"counter-stats-wrapper\">\n            {rows}\n        </div>\n    )\n\n\n}\n\n\nexport class Counters extends React.Component {\n\n    renderCounters() {\n        // console.log(this.state.counters);\n        // const counterList = Object.entries(this.state.counters).map((counter) =>\n        const counterList = this.props.counters.map((counter) => {\n            if (counter.isVisible) {\n                return (\n                    <div className=\"counter-wrapper\" key={counter.name}>\n                        <CounterButton\n                            counter={counter}\n                            score={this.props.score}\n                            purchaseAmt={this.props.purchaseAmt}\n                            handlePurchase={this.props.handlePurchase}\n                        />\n                        <CounterStats\n                            counter={counter}\n                            score={this.props.score}\n                            counters={this.props.counters}\n                            prestige={this.props.prestige}\n                            timeInterval={this.props.timeInterval}\n                            numberFormat={this.props.numberformat}\n                            purchaseAmt={this.props.purchaseAmt}\n                        />\n                    </div>\n                )\n            } else {\n                return (\n                    <div className=\"counter-wrapper\" key={counter.name}></div>\n                )\n            }\n        }\n        );\n        return (\n            <div> {counterList}</div >\n        );\n    }\n\n    render() {\n\n        return (\n            this.renderCounters()\n        );\n    }\n}\n\nexport default Counters;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { cfgCounters } from './CfgCounters.js';\nimport Counters from './Counters.js';\nimport { CounterFunc } from './CounterFunc';\n// import Decimal from 'decimal.js';\n// import * as numberformat from 'swarm-numberformat';\n\n\n// =====================================================\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const Decimal = require('decimal.js');\n        const numberformat = require('swarm-numberformat');\n        this.numberformat = new numberformat.Formatter({ backend: 'decimal.js', sigfigs: 4, format: 'engineering', Decimal: Decimal });\n        // this.numberformat = new numberformat.Formatter({ backend: 'decimal.js', format: 'engineering', Decimal: Decimal });\n\n        this.timeIntervalDefault = 100;\n\n        this.state = {\n            counters: cfgCounters(),\n            score: new Decimal(0),\n            prestige: { num: new Decimal(1000), val: 5 },\n            prestigeNext: new Decimal(0),\n            lifetimeEarnings: new Decimal(0),\n            purchaseOpts: [\"1\", \"10\", \"25\", \"100\", \"Max\", \"Max OCD\", \"PrimeTime\"],\n            purchaseAmt: \"1\",\n            incomePerSec: new Decimal(0),\n            incomePerTick: new Decimal(0),\n            pause: false,\n            pauseText: \"Pause\",\n            timeInterval: this.timeIntervalDefault,\n        }\n\n        this.timeInterval = this.timeIntervalDefault;\n\n        this.cleanState = { ...this.state };\n        delete this.cleanState.pauseText;\n        delete this.cleanState.purchaseAmt;\n\n\n        this.updateGame = this.updateGame.bind(this);\n        this.handlePurchase = this.handlePurchase.bind(this);\n        this.isTimerRunning = this.isTimerRunning.bind(this);\n        this.stopTimer = this.stopTimer.bind(this);\n        this.startTime = this.startTimer.bind(this);\n        this.pause = this.pause.bind(this);\n        this.restart = this.restart.bind(this);\n        this.updateInterval = this.updateInterval.bind(this);\n        this.freqUp = this.freqUp.bind(this);\n        this.freqDown = this.freqDown.bind(this);\n        this.calcPrestigeEarned = this.calcPrestigeEarned.bind(this);\n        this.prestige = this.prestige.bind(this);\n\n\n        this.tickIntervalId = setInterval(this.updateGame, this.timeInterval);\n        this.prestigeIntervalId = setInterval(this.calcPrestigeEarned, 1000);\n    }\n\n    restart() {\n        this.setState(this.cleanState);\n        this.timeInterval = this.timeIntervalDefault;\n        this.setState({\n            counters: cfgCounters(),\n        })\n        this.stopTimer();\n        this.startTimer();\n    }\n\n    isTimerRunning() {\n        return this.tickIntervalId ? true : false;\n    }\n\n    stopTimer() {\n        if (this.isTimerRunning()) {\n            console.log(\"stopping timer\");\n            clearInterval(this.tickIntervalId)\n            this.tickIntervalId = undefined;\n        }\n    }\n\n    startTimer() {\n        if (!this.isTimerRunning()) {\n            console.log(\"starting timer\");\n            const newIntervalId = setInterval(this.updateGame, this.timeInterval);\n            this.tickIntervalId = newIntervalId;\n        }\n    }\n\n    pause() {\n        if (this.isTimerRunning()) {\n            console.log(\"pausing...\");\n            this.stopTimer();\n            this.setState({\n                pauseText: \"Resume\"\n            })\n        } else {\n            console.log(\"trying to unpause...\")\n            this.startTimer();\n            this.setState({\n                pauseText: \"Pause\",\n            })\n        }\n    }\n\n    updateInterval(interval) {\n        this.timeInterval = interval;\n        this.setState({\n            timeInterval: interval,\n        })\n\n        if (this.isTimerRunning()) {\n            this.stopTimer();\n            this.startTimer();\n        }\n    }\n\n    freqUp() {\n        const testVal = this.timeInterval + 50;\n        const newFreq = testVal <= 5000 ? testVal : 5000;\n        this.updateInterval(newFreq);\n    }\n\n    freqDown() {\n        const testVal = this.timeInterval - 50;\n        const newFreq = testVal >= 10 ? testVal : 10;\n        this.updateInterval(newFreq);\n    }\n\n    updatePurchaseAmt(amt) {\n        if (this.state.purchaseOpts.indexOf(amt) !== -1 && this.state.purchaseAmt !== amt) {\n            this.setState({\n                purchaseAmt: amt,\n            })\n        }\n    }\n\n    calcPrestigeEarned() {\n        const Decimal = require('decimal.js');\n        const newPrestigeNext = Decimal.sqrt(this.state.lifetimeEarnings.div(Math.pow(10, 9))).times(150).floor();\n        if (newPrestigeNext !== this.state.prestigeNext) {\n            this.setState({\n                prestigeNext: newPrestigeNext,\n            })\n        }\n        // console.log(Decimal.sqrt(this.state.lifetimeEarnings.div(Math.pow(10, 6))).times(150));\n    }\n\n    prestige() {\n        this.calcPrestigeEarned();\n        const newPrestige = this.state.prestige.num.plus(this.state.prestigeNext);\n        this.restart();\n        this.setState({\n            prestige: { num: newPrestige, val: this.state.prestige.val },\n        })\n    }\n\n    updateGame() {\n        let changed = false;\n        let counterList = this.state.counters.map((counter) => {\n\n            const costObj = CounterFunc.getCost(counter, this.state.purchaseAmt, this.state.score);\n\n            if (counter.isVisible === false && this.state.score.gte(counter.initialVisible)) {\n                counter.isVisible = true;\n                changed = true;\n            }\n            if (counter.disabled === false && (costObj.num === 0 || this.state.score.lt(costObj.cost))) {\n                counter.disabled = true;\n                changed = true;\n            }\n            if (counter.disabled === true && costObj.num > 0 && this.state.score.gte(costObj.cost)) {\n                counter.disabled = false;\n                changed = true;\n            }\n            return counter;\n        })\n        if (changed) {\n            this.setState({\n                counters: counterList,\n            })\n        }\n\n        const incomePerSec = CounterFunc.sumCounters(this.state.counters, CounterFunc.getRevenue, this.state.prestige);\n        const incomePerTick = CounterFunc.getRevenuePerTick(incomePerSec, this.timeInterval);\n        const newLifetimeEarnings = this.state.lifetimeEarnings.plus(incomePerTick);\n        this.setState({\n            incomePerSec: incomePerSec,\n            incomePerTick: incomePerTick,\n            score: this.state.score.plus(incomePerTick),\n            lifetimeEarnings: newLifetimeEarnings,\n        })\n        // this.calcPrestigeEarned(newLifetimeEarnings);\n    }\n\n    handlePurchase(counter) {\n        const counterCost = CounterFunc.getCost(counter, this.state.purchaseAmt, this.state.score);\n        console.log(\"handlePurchase cost:\" + counterCost.cost.toFixed(0));\n        if (this.state.score.gte(counterCost.cost)) {\n            // console.log(\"typeof(counterCost.num): \" + typeof (counterCost.num) + \"  owned: \" + typeof (counter.owned));\n            console.log(\"purchasing \" + counterCost.num + \" x \" + counter.name + \" at $\" + counterCost.cost.toFixed(2));\n            let updatedCounter = { ...counter };\n\n            updatedCounter.owned = (counter.owned + counterCost.num);\n\n            const newScore = this.state.score.minus(counterCost.cost);\n            let counterList = this.state.counters.map((c) => {\n                return (c.name === counter.name) ? updatedCounter : c;\n            })\n            this.setState({\n                counters: counterList,\n                score: newScore,\n            })\n            // console.log(updatedCounter);\n        } else {\n            console.log(\"not enough money to purchase \" + counter.name + \" at $\" + counterCost.cost.toFixed(2) + \" < \" + this.state.score.toFixed(2));\n        }\n    }\n\n    render() {\n        // const Decimal = require('decimal.js');\n        const prestigeMultiplier = this.state.prestige.num.times(this.state.prestige.val);\n        const prestigeClass = this.state.prestigeNext.gt(0) ? \"prestige prestige-Avail\" : \"prestige prestige-notAvail\";\n\n        return (\n            <div className=\"main-window\">\n                <div className=\"counters\">\n                    <Counters\n                        counters={this.state.counters}\n                        prestige={this.state.prestige}\n                        score={this.state.score}\n                        timeInterval={this.timeInterval}\n                        numberformat={this.numberformat}\n                        purchaseAmt={this.state.purchaseAmt}\n                        handlePurchase={this.handlePurchase}\n                    />\n                </div>\n                <div className=\"score-panel\">\n                    <h1>${CounterFunc.showNumber(this.state.score, this.numberformat)}</h1>\n                    <h3>{CounterFunc.showNumber(this.state.incomePerSec, this.numberformat)} /s</h3>\n                    <h3>{CounterFunc.showNumber(this.state.incomePerTick, this.numberformat)} /tick</h3>\n                    <h3>tick = {this.state.timeInterval} ms</h3>\n                    <h3>{CounterFunc.showNumber(this.state.lifetimeEarnings, this.numberformat)} lifetime earnings</h3>\n                    <h3>\n                        {CounterFunc.showNumber(this.state.prestige.num, this.numberformat)}\n                        &nbsp;prestige gives&nbsp;\n                        {CounterFunc.showNumber(prestigeMultiplier, this.numberformat)}%\n                    </h3>\n                    <h3>{CounterFunc.showNumber(this.state.prestigeNext, this.numberformat)} next prestige</h3>\n                </div>\n                <div className=\"control-panel\">\n                    <button className=\"pause-button\" onClick={this.pause}>{this.state.pauseText}</button>\n                    <button className=\"pause-button\" onClick={this.restart}>Restart</button>\n                    <button className=\"freqUp\" onClick={this.freqUp}>Slower</button>\n                    <button className=\"freqDown\" onClick={this.freqDown}>Faster</button>\n                    <div className=\"timerRunning\">timerRunning: {this.isTimerRunning().toString()}</div>\n                    <br />\n                    <div className=\"purchaseAmts\">\n                        {this.state.purchaseOpts.map((amt) => {\n                            let amtClass = \"purchase-amount\"\n                            if (amt === this.state.purchaseAmt) {\n                                amtClass = \"purchase-amount amt-selected\";\n                            }\n                            return (\n                                <button key={amt} className={amtClass} onClick={() => { this.updatePurchaseAmt(amt) }}>{amt}</button>\n                            )\n                        })}\n                    </div>\n                    <div>\n                        <br />\n                        <button className={prestigeClass} disabled={this.state.prestigeNext.gt(0) ? false : true} onClick={this.prestige}>Prestige</button>\n                    </div>\n                    {/* <div>\n                        { Object.entries( CounterFunc.maxBuy(this.state.counters[0], this.state.score) ).map( (key) => {\n                            return (\n                                <div key={key[0]}>{key[0]}:{CounterFunc.showNumber(key[1], this.numberformat)}</div>\n                            )\n                        })}\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\n\n// =====================================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}